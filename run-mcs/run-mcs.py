""" run a batch of ggems using python

@file change_batch_file_names.py
@author Bo Ma
@version 1.0
@date 2019.09.28

"""

import subprocess
import time

def run_mcs_python():
    """
    function run ggems and copy the results to a autogenerated file
    @param
    @return

    """

    mcs_path_base = "/home/mabo/software/data/patient_data/FDG/HM1BP081F-BI/scatterMCS/"

    index_start =  93
    index_end = 94
    for index in range(index_start,index_end):
        mcs_sub_folder = "run-"+ str(index)


        mcs_path_full = mcs_path_base + mcs_sub_folder
        mcs_bin_name = mcs_path_base + "HM1BP081F-BI_gpuSimu_0.bin"
        mcs_lor_name = mcs_path_base + "HM1BP081F-BI*"

        mcs_exe_path = "/home/mabo/software/src/gpupet_nsight/gpu_mcs_eclipse/Release/gpu_mcs_eclipse"

        args_run_mcs = mcs_exe_path

        args_md = "mkdir" + " " + mcs_path_full
        args_del = "rm" + " " + mcs_bin_name
        args_mv = "mv" + " " + mcs_lor_name + " " + mcs_path_full


        print("------------start to run simulation !--------")
        popen = subprocess.Popen(args_run_mcs, shell=False)
        popen.wait()
        print("------------simulation is over!--------")
        popen = subprocess.Popen(args_md, shell=True)
        popen.wait()
        print("------------mkdir start!--------")
        popen = subprocess.Popen(args_del, shell=True)
        popen.wait()
        print("------------start delete bin!--------")
        popen = subprocess.Popen(args_mv, shell=True)
        popen.wait()
        print("------------mv the results!--------")

        print("------------simulation is over!--------")
        print("------------simulation is over!--------")
        print("------------simulation is over!--------")
        print("------------simulation is over!--------")
        popen.wait

        time.sleep(1800)

def lor_to_sino():
    """TODO: convert lor data to sino data
    :returns: TODO

    """
    args_lor_to_sino = "root -l /home/mabo/software/src/root_macros/brain_pet_root_macros/Lor_to_sino.C"
    print("------------start to run simulation !--------")
    popen = subprocess.Popen(args_lor_to_sino, shell=True)
    popen.wait()
    time.sleep(10)

def merge_sion():
    """TODO: merge the simulated sinos to one sino
    :returns: TODO

    """
    args_lor_to_sino = "root -l /home/mabo/software/src/root_macros/brain_pet_root_macros/Sino_manipulation.C"
    print("------------start to sino merge !--------")
    popen = subprocess.Popen(args_lor_to_sino, shell=True)
    popen.wait()
    time.sleep(10)

# Driver code
if __name__ == '__main__':
    #calling the main function
    print("------------start to run simulation !--------")
    #  run_mcs_python()
    print("------------end to run simulation !--------")

    #  time.sleep(100)

    print("------------start to Lor to sino !--------")
    #  lor_to_sino()
    print("------------end to Lor to sino !--------")

    #  time.sleep(15)

    print("------------start to sino merge !--------")
    #  time.sleep(100)

    merge_sion()
    time.sleep(10)
    print("------------end to sino merge !--------")
